pipeline {

    agent any

    stages {

        stage('PARAMS') {
            steps {
                script {
                  echo 'test'
                  echo "${params.ENV}"
                  echo "${params.VERSION}"
                  
                  
                //   println docker_tag
                //   println BUILD_ID
                  
                //   def apinodedeployment = readFile('deployment.yaml') 
                  
                //   println apinodedeployment
                  
                //   def imageTag = 'IMAGE_TAG'
                  
                //   apinodedeployment=apinodedeployment.replaceAll(imageTag, docker_tag)
            
                //   println apinodedeployment
                  

                  def files = ["deployment.yaml", "deployment2.yaml"] as String[]

                  def imageTag = '[IMAGE_TAG]'
                  def ocProject = '[OC_PROJECT]'

                  def local_imageTag  = params.ENV+"-"+params.VERSION
                  def local_ocProject = params.ENV

                  def deploy = files.collect {
                      println it //print fileName
                      def file = readFile(it)
                      file=file.replaceAll(imageTag, local_imageTag)
                      //file=file.replaceAll(ocProject, local_ocProject)
                      println file
                  }

                  
                  //echo "${params.OC_PROJECT}"
                  //echo "${params.MVN_BUILD_TAG}"
                  //echo "${params.OC_REGISTRY_TAG}"
                  //def docker_tag=params.OC_REGISTRY_TAG+params.ENV
                 //sh 'docker image prune --force'
                 //sh 'docker image prune -a --force'
                }
            }
       }
    }
}
